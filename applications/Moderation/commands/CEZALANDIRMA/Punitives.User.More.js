const { Client, Message, MessageButton, MessageActionRow } = require("discord.js");
const Punitives = require('../../../../database/Schemas/Global.Punitives');
const { richEmbed } = require("../../../../base/Funksiyonlar/embed");
module.exports = {
    name: "cezaiÅŸlemleri",
    command: ["ceza-iÅŸlemleri","cezakontrol"],
    aliases: "cezaiÅŸlemleri <@cartel/ID>",
    description: "Belirlenen veya komutu kullanan kiÅŸi belirlediÄŸi yetkili sayÄ±sÄ±nÄ± ve en son belirlediÄŸi yetkili sayÄ±sÄ±nÄ± gÃ¶sterir.",
    category: "kurucu",
    uzantÄ±: true,
    
   /**
   * @param {Client} client 
   */
  Ã¶nClient: function (client) {

  },

   /**
   * @param {Client} client 
   * @param {Message} message 
   * @param {Array<String>} args 
   */

  komutClient: async function (client, message, args) {
    if(!roller.kurucuRolleri.some(rolAra => message.member.roles.cache.has(rolAra)) && !message.member.permissions.has('ADMINISTRATOR')) return message.channel.send({embeds: [new richEmbed().Ã¼stBaÅŸlÄ±k(message.member.user.username, message.member.user.avatarURL({dynamic: true})).aÃ§Ä±klama(cevaplar.yetersiz)]})
    let cartelcim = message.mentions.users.first() || message.guild.members.cache.get(args[0]) || message.member;
    if(!cartelcim) return message.channel.send({embeds: [new richEmbed().Ã¼stBaÅŸlÄ±k(message.member.user.username, message.member.user.avatarURL({dynamic: true})).aÃ§Ä±klama(cevaplar.Ã¼ye)]})
    cartelcim = message.guild.members.cache.get(cartelcim.id)
    let atÄ±lanCezalar = await Punitives.find({Staff: cartelcim.id})
    if(!atÄ±lanCezalar) return message.reply({content: ` ${cartelcim} kiÅŸisinin daha Ã¶nce yaptÄ±rÄ±m uyguladÄ±ÄŸÄ± ceza-i iÅŸlem bulunamadÄ±.`});
    let cezalar = atÄ±lanCezalar
  //  atÄ±lanCezalar.forEach(ceza => cezalar.push({No: ceza.No, Type: ceza.Type, Member: ceza.Member, Reason: ceza.Reason, Date: ceza.Date}))
    let Row = new MessageActionRow().addComponents(
      new MessageButton()
      .setCustomId("last25")
      .setLabel("Son 25 YaptÄ±rÄ±mlarÄ±")
      .setStyle("DANGER"),
      new MessageButton()
      .setCustomId("bans")
      .setLabel("ğŸ“› Yasaklamalar")
      .setStyle("PRIMARY"),
      new MessageButton()
      .setCustomId("jails")
      .setLabel("ğŸš« CezalandÄ±rmalar")
      .setStyle("PRIMARY"),
      new MessageButton()
      .setCustomId("mutes")
      .setLabel("ğŸ”‡ Susturmalar")
      .setStyle("PRIMARY"),
      new MessageButton()
      .setCustomId("warns")
      .setLabel("ğŸ”” UyarÄ±lar")
      .setStyle("PRIMARY"),
    )
    await message.channel.send({embeds: [new richEmbed().aÃ§Ä±klama(`:x: AÅŸaÄŸÄ± da **${cartelcim.user.username}** (${cartelcim}) isimli kiÅŸisi(yetkilisi) tarafÄ±ndan yaptÄ±rÄ±m uygulanan cezalar listelenmektedir, dÃ¼ÄŸmelerden tarafÄ±nca yaptÄ±rÄ±m uygulanan ceza tÃ¼rÃ¼nÃ¼ seÃ§erek listeleyebilirsiniz.`)], components: [Row]}).then(async (msg) => {
      const filter = i => i.user.id == message.member.id 
      const collector = msg.createMessageComponentCollector({ filter,  errors: ["time"], time: 60000 })
      collector.on("collect", async (i) => {
        if(i.customId == "last25") {
         await msg.edit({embeds: [new richEmbed().renk("RANDOM").aÃ§Ä±klama(`AÅŸaÄŸÄ± da **${cartelcim.user.username}** (${cartelcim}) kiÅŸisinin son 25 yaptÄ±rÄ±m uygulanan cezalarÄ± listelenmekte.\n\n${cezalar.slice(0, 25).sort((a, b) => b.Date - a.Date ).filter(x => x.No != "-99999").map((value, index) => `\` #${value.No} (${value.Type}) \` ${message.guild.members.cache.has(value.Member) ? message.guild.members.cache.get(value.Member) : `<@${value.Member}>`} kiÅŸisine \`${tarihsel(value.Date)}\` tarihinde ceza-i iÅŸlem uygulandÄ±.`).join("\n")}`)]}).catch(err => {}),await i.deferUpdate().catch(err => {})
        }
        if(i.customId == "bans") {
            await msg.edit({embeds: [new richEmbed().renk("RANDOM").aÃ§Ä±klama(`AÅŸaÄŸÄ± da **${cartelcim.user.username}** (${cartelcim}) kiÅŸisinin son yasakladÄ±ÄŸÄ± 15 Ã¼ye listelenmektedir.\n\n${cezalar.filter(x => x.Type == "Yasaklama" || x.Type == "Kalkmaz Yasaklama" || x.Tpye == "Underworld" ).length > 0  ? cezalar.slice(0, 15).sort((a, b) => b.Date - a.Date ).filter(x => x.Type == "Yasaklama" || x.Type == "Kalkmaz Yasaklama" ).map((value, index) => `\` #${value.No} \` ${message.guild.members.cache.has(value.Member) ? message.guild.members.cache.get(value.Member) : `<@${value.Member}>`} kiÅŸisine **${value.Reason}** sebebiyle \`${tarihsel(value.Date)}\` tarihinde yasakladÄ±.`).join("\n"): "Daha Ã¶nce yaptÄ±rÄ±m uygulanan yasaklama bulunamadÄ±." }`)]}).catch(err => {}),await i.deferUpdate().catch(err => {})
        }
        if(i.customId == "jails") {
            await msg.edit({embeds: [new richEmbed().renk("RANDOM").aÃ§Ä±klama(`AÅŸaÄŸÄ± da **${cartelcim.user.username}** (${cartelcim}) kiÅŸisinin son cezalandÄ±rdÄ±ÄŸÄ± 15 Ã¼ye listelenmektedir.\n\n${cezalar.filter(x => message.guild.members.cache.has(x.Member) && x.Type == "CezalandÄ±rÄ±lma" ).length > 0 ? cezalar.slice(0, 15).sort((a, b) => b.Date - a.Date ).filter(x => message.guild.members.cache.has(x.Member) && x.Type == "CezalandÄ±rÄ±lma" ).map((value, index) => `\` #${value.No} \` ${message.guild.members.cache.has(value.Member) ? message.guild.members.cache.get(value.Member) : `<@${value.Member}>`} kiÅŸisine **${value.Reason}** sebebiyle \`${tarihsel(value.Date)}\` tarihinde cezalandÄ±rÄ±ldÄ±.`).join("\n"): "Daha Ã¶nce yaptÄ±rÄ±m uygulanan cezalandÄ±rma bulunamadÄ±." }`)]}).catch(err => {}),await i.deferUpdate().catch(err => {})
        }
        if(i.customId == "mutes") {
            await msg.edit({embeds: [new richEmbed().renk("RANDOM").aÃ§Ä±klama(`AÅŸaÄŸÄ± da **${cartelcim.user.username}** (${cartelcim}) kiÅŸisinin son susturduÄŸu 15 Ã¼ye listelenmektedir.\n\n${cezalar.filter(x => message.guild.members.cache.has(x.Member) && (x.Type == "Ses Susturulma" || x.Type == "Metin Susturulma") ).length > 0 ? cezalar.slice(0, 15).sort((a, b) => b.Date - a.Date ).filter(x => message.guild.members.cache.has(x.Member) && (x.Type == "Ses Susturulma" || x.Type == "Metin Susturulma") ).map((value, index) => `\` #${value.No} \` ${message.guild.members.cache.has(value.Member) ? message.guild.members.cache.get(value.Member) : `<@${value.Member}>`} kiÅŸisine **${value.Reason}** sebebiyle \`${tarihsel(value.Date)}\` tarihinde ${value.Type == "Ses Susturulma" ? "ses kanallarÄ±nda susturuldu" : "metin kanallarÄ±nda susturuldu" }.`).join("\n"): "Daha Ã¶nce yaptÄ±rÄ±m uygulanan susturulma bulunamadÄ±." }`)]}).catch(err => {}),await i.deferUpdate().catch(err => {})
        }
        if(i.customId == "warns") {
            await msg.edit({embeds: [new richEmbed().renk("RANDOM").aÃ§Ä±klama(`AÅŸaÄŸÄ± da **${cartelcim.user.username}** (${cartelcim}) kiÅŸisinin son uyardÄ±ÄŸÄ± 15 Ã¼ye listelenmektedir.\n\n${cezalar.filter(x => message.guild.members.cache.has(x.Member) && x.Type == "UyarÄ±lma" ).length > 0 ? cezalar.slice(0, 15).sort((a, b) => b.Date - a.Date ).filter(x => message.guild.members.cache.has(x.Member) && x.Type == "UyarÄ±lma" ).map((value, index) => `\` #${value.No} \` ${message.guild.members.cache.has(value.Member) ? message.guild.members.cache.get(value.Member) : `<@${value.Member}>`} kiÅŸisine **${value.Reason}** sebebiyle \`${tarihsel(value.Date)}\` tarihinde uyarÄ±ldÄ±.`).join("\n"): "Daha Ã¶nce yaptÄ±rÄ±m uygulanan uyarma bulunamadÄ±." }`)]}).catch(err => {}),await i.deferUpdate().catch(err => {})
        }
      })
      collector.on('end', i => {
          msg.delete().catch(err => {})
      })
    }).catch(err => {})
  }
};

